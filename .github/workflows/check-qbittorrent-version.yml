name: Update qBittorrent Version

on:
  schedule:
    - cron: '0 6 * * *'  # Daily at 06:00 UTC
  workflow_dispatch:     # Manual trigger support

jobs:
  check-version:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install jq and yq
        run: |
          sudo apt-get update
          sudo apt-get install -y jq
          curl -sL https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 -o /usr/local/bin/yq
          chmod +x /usr/local/bin/yq

      - name: Get latest qBittorrent version
        id: latest
        run: |
          latest=$(curl -s https://api.github.com/repos/qbittorrent/qBittorrent/releases/latest | jq -r .tag_name | sed 's/^release-//')
          echo "latest_version=$latest" >> "$GITHUB_OUTPUT"

      - name: Get current version from config.yaml
        id: current
        run: |
          current=$(yq '.options.QBT_VERSION' ./qbittorrent_nox/config.yaml)
          echo "current_version=$current" >> "$GITHUB_OUTPUT"

      - name: Compare and update config.yaml if version changed
        if: steps.latest.outputs.latest_version != steps.current.outputs.current_version
        run: |
          echo "Updating from ${{ steps.current.outputs.current_version }} to ${{ steps.latest.outputs.latest_version }}"

          # Update QBT_VERSION in options
          yq e '.options.QBT_VERSION = "${{ steps.latest.outputs.latest_version }}"' -i ./qbittorrent_nox/config.yaml

          # Update top-level version
          yq e '.version = "${{ steps.latest.outputs.latest_version }}"' -i ./qbittorrent_nox/config.yaml

          # Commit and push
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add ./qbittorrent_nox/config.yaml
          git commit -m "Update qBittorrent version to ${{ steps.latest.outputs.latest_version }}"
          git push

      - name: No update needed
        if: steps.latest.outputs.latest_version == steps.current.outputs.current_version
        run: echo "Already up-to-date (version ${{ steps.current.outputs.current_version }})"
